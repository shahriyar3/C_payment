/*!
 * Start Bootstrap - SB Admin 2 v4.0.6 (https://startbootstrap.com/template-overviews/sb-admin-2)
 * Copyright 2013-2019 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */

!function (t) {
    "use strict";
    t("#sidebarToggle, #sidebarToggleTop").on("click", function (o) {
        t("body").toggleClass("sidebar-toggled"), t(".sidebar").toggleClass("toggled"), t(".sidebar").hasClass("toggled") && t(".sidebar .collapse").collapse("hide")
    }), t(window).resize(function () {
        t(window).width() < 768 && t(".sidebar .collapse").collapse("hide")
    }), t("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (o) {
        if (768 < t(window).width()) {
            var e = o.originalEvent, l = e.wheelDelta || -e.detail;
            this.scrollTop += 30 * (l < 0 ? 1 : -1), o.preventDefault()
        }
    }), t(document).on("scroll", function () {
        100 < t(this).scrollTop() ? t(".scroll-to-top").fadeIn() : t(".scroll-to-top").fadeOut()
    }), t(document).on("click", "a.scroll-to-top", function (o) {
        var e = t(this);
        t("html, body").stop().animate({scrollTop: t(e.attr("href")).offset().top}, 1e3, "easeInOutExpo"), o.preventDefault()
    })
}(jQuery);

// function submit(r,e,t,s,a,l){var n=$(r).html();$(r).attr("disabled","disabled").html(a),$("#"+s).html(" ").removeClass();var o=new FormData($("#"+t)[0]);$.ajax({url:e,type:"POST",dataType:"JSON",data:o,processData:!1,contentType:!1,success:function(e,t,a){if($(r).removeAttr("disabled").html(n),e.success)return $("#"+s).html(e.success).addClass("alert alert-success"),document.getElementById(s).scrollIntoView({behavior:"smooth",inline:"nearest"}),e.menus;e.error&&$("#"+s).html(e.error).addClass("alert alert-danger")},error:function(e,t,a){return 422==e.status?$.each(e.responseJSON.errors,function(e,t){$("#"+s).append("<li>"+t+"</li>").addClass("alert alert-danger")}):$("#"+s).append("<li>"+e.responseJSON.message+"</li>").addClass("alert alert-danger"),document.getElementById(s).scrollIntoView({behavior:"smooth",inline:"nearest"}),$(r).removeAttr("disabled").html(n),!1}})}
function submit(obj, action, form, result) {
    var text = $(obj).html();
    $(obj).addClass('disabled').attr('aria-disabled', 'true').text(' .... ');
    $("#" + result).html(' ').removeClass();

    var formData = new FormData($('#' + form)[0]);

    //Ajax Load data from ajax
    return $.ajax({
        url: action,
        type: "POST",
        dataType: "JSON",
        data: formData,
        processData: false,
        contentType: false,
        success: function (data, textStatus, xhr) {
            $(obj).removeClass('disabled').removeAttr('aria-disabled').html(text);
            if (data.success) {
                $("#" + result).html(data.success).addClass("alert alert-success");
                document.getElementById(result).scrollIntoView({behavior: "smooth", inline: "nearest"});
                $('#' + form).trigger("reset");
            }
            if (data.error) {
                $("#" + result).html(data.error).addClass("alert alert-danger");
            }
            if (data.reload) {
                window.location.reload();
            }
        },
        error: function (jqXHR, textStatus, xhr) {
            if (jqXHR.status == 422) {
                $.each(jqXHR.responseJSON.errors, function (k, v) {
                    $("#" + result).append('<li>' + v + '</li>').addClass('alert alert-danger');
                });
                document.getElementById(result).scrollIntoView({behavior: "smooth", inline: "nearest"});

            } else {
                $("#" + result).append('<li>' + jqXHR.responseJSON.message + '</li>').addClass('alert alert-danger');
                document.getElementById(result).scrollIntoView({behavior: "smooth", inline: "nearest"});
            }
            $(obj).removeClass('disabled').removeAttr('aria-disabled').html(text);
            return false;
        }
    });
}

function reset(form, result) {
    $('#' + form)[0].reset();
    $("#" + result).html(' ').removeClass();
}

function edit(obj, action, modal) {
    var text = $(obj).html();
    $(obj).attr('disabled', 'disabled').text(' .... ');

    var formData = new FormData();
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    //Ajax Load data from ajax
    return $.ajax({
        url: action,
        type: "POST",
        dataType: "JSON",
        data: formData,
        processData: false,
        contentType: false,
        success: function (data, textStatus, xhr) {
            $(obj).removeAttr('disabled').html(text);
            if (data.success) {
                $("#" + modal).html(data.success).show();
            }
            if (data.error) {
                window.location.reload();
            }
            if (data.reload) {
                window.location.reload();
            }
        },
        error: function (jqXHR, textStatus, xhr) {
            if (jqXHR.status == 422) {
                $.each(jqXHR.responseJSON.errors, function (k, v) {
                    $("#" + result).append('<li>' + v + '</li>').addClass('alert alert-danger');
                });
                document.getElementById(result).scrollIntoView({behavior: "smooth", inline: "nearest"});

            } else {
                $("#" + result).append('<li>' + jqXHR.responseJSON.message + '</li>').addClass('alert alert-danger');
                document.getElementById(result).scrollIntoView({behavior: "smooth", inline: "nearest"});
            }
            $(obj).removeAttr('disabled').html(text);
            return false;
        }
    });
}

function confirm(obj, action) {
    Swal.fire({
        title: 'آیا از حذف این مورد اطمینان دارید؟',
        //text: "بعد از حذف امکان بازیابی وجود دارد",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        cancelButtonText: 'نه! برگرد',
        confirmButtonText: 'بله! حذف کن'
    }).then((result) => {
        if (result.value) {
            remove(obj, action);
        }
    })
}

function remove(obj, action) {
    var text = $(obj).html();
    $(obj).addClass('disabled').attr('aria-disabled', 'true').text(' .... ');
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    return $.ajax({
        url: action,
        type: "DELETE",
        success: function (data, textStatus, xhr) {
            $(obj).removeClass('disabled').removeAttr('aria-disabled').html(text);
            if (data.success == 'ok') {
                Swal.fire({
                    title: 'حذف شد!',
                    text: 'رکورد مورد نظر شما با موفقیت حذف شد',
                    icon: 'success',
                    confirmButtonText: 'باشه'
                }).then((result) => {
                    if (result.value) {
                        window.location.reload();
                    }
                })
            }
        },
        error: function (jqXHR, textStatus, xhr) {
            $(obj).removeClass('disabled').removeAttr('aria-disabled').html(text);
            return false;
        }
    });
}

function detail(obj, action) {
    var tr = $(obj).closest('tr');
    var row = table.row(tr);

    if (row.child.isShown()) {
        // This row is already open - close it
        row.child.hide();
        tr.removeClass('shown');
    } else {
        tr.addClass('shown');
        $.ajax({
            url: action,
            type: "GET",
            dataType: "JSON",
            success: function (data, textStatus, xhr) {
                if (data.success) {
                    // Open this row
                    row.child(data.success).show();

                }
            }
        });
    }
}

function timeout(ms, promise) {
    return new Promise(function (resolve, reject) {
        setTimeout(function () {
            reject(new Error("timeout"))
        }, ms)
        promise.then(resolve, reject)
    })
}

(function() {
    setInterval(function () {
        timeout(1000, fetch('/admin/notifications')).then(function (response) {
            response.json().then(function (res) {
                document.getElementById("notification-number").innerHTML = res.count;
                document.getElementById("notification-content").innerHTML = res.content;
            });

        }).catch(function (error) {
            console.log(error);
        })
    }, 15000)
})();

function mynotif(obj, url) {
    var address = $(obj).attr('data-url');
    fetch(url).then(function (response) {
        window.location.href = address;
    });
}
